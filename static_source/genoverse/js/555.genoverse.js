"use strict";(self.webpackChunkgenoverse=self.webpackChunkgenoverse||[]).push([[555],{2555:(t,o,e)=>{e.r(o),e.d(o,{default:()=>a});const a={trackControls:function(){const t=this.jQuery,o=[t('<a title="More info" class="fas fa-question-circle">').on("click",(function(){const o=t(this).data("track");let e=o.prop("menus").filter(".gv-track-info");if(!e.length){const t=o.prop("info");e=o.prop("menus",o.prop("menus").add(o.browser.makeMenu({title:o.name,["function"==typeof t?t.call(o):t||""]:""}).addClass("gv-track-info")))}e.show().position({of:o.prop("container"),at:"center top",my:"center top",collision:"none"})})),t('\n      <a class="gv-height-toggle">\n        <i class="fas fa-sort"></i>\n        <i class="fas fa-sort-down"></i>\n        <i class="fas fa-sort-up"></i>\n      </a>\n    ').on({click:function(){const o=t(this).data("track");let e;o.prop("autoHeight",!o.prop("autoHeight"))?(o.prop("heightBeforeToggle",o.prop("height")),e=o.prop("fullVisibleHeight")):e=o.prop("heightBeforeToggle")||o.prop("initialHeight"),t(this).trigger("toggleState"),o.controller.resize(e,!0)},toggleState:function(){const o=t(this).data("track"),e=o.prop("autoHeight"),a=o.prop("resizer");this.title=e?"Set track to fixed height":"Set track to auto-adjust height",t(this)[e?"addClass":"removeClass"]("gv-auto-height"),a&&a[e?"hide":"show"]()}})],e=t('<a title="Remove track" class="far fa-trash-alt">').on("click",(function(){t(this).data("track").remove()})),a=t('\n    <a class="gv-track-controls-toggle">\n      <span><i class="fas fa-angle-double-left"></i><i class="fas fa-cog"></i></span>\n      <span><i class="fas fa-angle-double-right"></i></span>\n    </a>\n  ').on("click",(function(){t(this).parent().toggleClass("gv-maximized")}));this.on({afterAddDomElements:function(){let i=this.prop("controls");if("off"===i)return;const s=this.prop("defaultConfig"),r=this.browser.savedConfig?.[this.prop("id")]||{};i=(i||[]).concat(o,!1===this.prop("removable")?[]:e),this.trackControls=t('<div class="gv-track-controls">').prependTo(this.container);const n=t('<div class="gv-track-controls-container">').appendTo(this.trackControls);i.forEach((o=>{let e;if(t.isPlainObject(o)&&o.type?(e=t(`<${o.type}>`).data("control",o.name),(o.options||[]).forEach((t=>e.append(`<option value="${t.value}">${t.text}</option>`)))):"string"==typeof o?e=t(o):"object"==typeof o&&o.constructor&&o instanceof t&&(e=o.clone(!0)),e.data("track",this.track).appendTo(n),e.is("select")){const o=e.data("control");e.find(`option[value=${r[o]||s[o]||"all"}]`).attr("selected",!0).end().change((function(){t(this).data("track").setConfig(t(this).data("control"),this.value)}))}})),this.prop("heightToggler",n.children(".gv-height-toggle").trigger("toggleState"));const c=a.clone(!0).data("track",this.track).appendTo(this.trackControls);c.trigger("click"),this.minLabelHeight=Math.max(this.minLabelHeight,this.trackControls.outerHeight(!0)+this.prop("margin")),c.trigger("click")},afterResize:function(){this.trackControls&&this.trackControls[this.prop("height")<this.trackControls.outerHeight(!0)?"hide":"show"]()},afterResetHeight:function(){const t=this.prop("heightToggler");!0===this.prop("resizable")&&t&&(t[this.prop("autoHeight")?"addClass":"removeClass"]("gv-auto-height"),t.trigger("toggleState"))},afterSetMVC:function(){const t=this.prop("heightToggler");t&&t.trigger("toggleState")[!0===this.prop("resizable")?"removeClass":"addClass"]("gv-hide")}},"tracks")}}}}]);
//# sourceMappingURL=555.genoverse.js.map
