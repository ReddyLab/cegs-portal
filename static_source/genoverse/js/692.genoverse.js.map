{"version":3,"file":"692.genoverse.js","mappings":"wFAAA,IAAIA,EAAM,CACT,QAAS,KACT,WAAY,KACZ,QAAS,KACT,WAAY,KACZ,WAAY,KACZ,cAAe,KACf,WAAY,KACZ,cAAe,KACf,QAAS,KACT,WAAY,KACZ,QAAS,KACT,WAAY,KACZ,QAAS,KACT,WAAY,MAGb,SAASC,EAAoBC,GAC5B,OAAOC,QAAQC,UAAUC,MAAK,KAC7B,IAAIC,EAAoBC,EAAEP,EAAKE,GAAM,CACpC,IAAIM,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,CACP,CAGA,OAAOF,EADEN,EAAIE,GACiB,GAEhC,CACAD,EAAoBU,KAAO,IAAOC,OAAOD,KAAKX,GAC9CC,EAAoBY,GAAK,KACzBC,EAAOC,QAAUd,C,4DC7BjB,MA8EA,GAAiBe,SA9EF,WACb,MAAMC,EAASC,KAAKD,OAEpBC,KAAKC,GAAG,aAAa,WACnB,MAAMC,EAAUF,KACVG,EAAUH,KAAKG,QAErBJ,EAAOK,QAAQH,GAAG,aAAcX,IAC9B,MAAMe,EAAef,EAAEgB,cAAcD,aAErC,GAAIA,GAAcE,QACU,UAA1BF,EAAaE,MAAM,IAA4C,UAA1BF,EAAaE,MAAM,IAA4C,UAA1BF,EAAaE,MAAM,MACzFR,EAAO,+BAA+BS,OAAQ,CAClD,MAAMC,EAAmBV,EAAO,8BAA8BW,SAASP,GACjEQ,EAAmBZ,EAAO,4CAA4Ca,UAAU,QAEhFC,EAAY,KAChBJ,EAAYK,SACZH,EAAiBG,QAAQ,EAG3BH,EAAiBV,GAAG,aAAcc,IAASA,EAAGC,iBAAkBD,EAAGE,iBAAiB,IACpFN,EAAiBV,GAAG,YAAcc,IAASA,EAAGC,iBAAkBD,EAAGE,iBAAiB,IACpFN,EAAiBV,GAAG,YAAaY,GACjCF,EAAiBV,GAAG,QAASc,IAC3BF,IACAE,EAAGC,iBACHD,EAAGE,kBAGH,MAAMC,EAAiBxB,OAAOyB,OAAOJ,EAAGT,cAAcD,aAAaa,OAAOE,MAAK,CAACC,EAAGC,IAAMD,EAAEE,KAAKC,cAAcF,EAAEC,QAC1GE,EAAiB,GAEvB,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAMV,OAAQkB,IAAK,CACrC,MAAMC,EAAQT,EAAMQ,GACdE,EAAQD,EAAKJ,KAAKM,MAAM,KAAKC,UAC7BC,EAAqB,OAAbH,EAAM,GACdI,EAAQJ,EAAMG,EAAK,EAAI,GAE7B,IAAIE,EAEAf,EAAMQ,EAAI,IAAM,IAAIQ,OAAO,IAAIP,EAAKJ,gBAAgBY,KAAKjB,EAAMQ,EAAI,GAAGH,QACxEU,EAAYf,IAAQQ,IAGtBD,EAAeW,KAAK,CAClBT,KAAYA,EACZM,UAAYA,EACZF,GAAYA,EACZM,UAAYL,EAAIM,eAEpB,CAEAb,EAAec,SACZC,IACC,QAAO,KAAyBA,EAASH,aAAalD,MACnDsD,IACC,MAAMC,EAAQD,EAASE,QAAQC,OAAO,CACpCrB,KAAYiB,EAASb,KAAKJ,KAC1BsB,KAAY,eAAeL,EAASb,KAAKJ,gBAAgBiB,EAASb,KAAKmB,aACvEC,SAAY,EACZC,SAAYR,EAASb,KACrBM,UAAYO,EAASP,UACrBF,GAAYS,EAAST,KAGvB7B,EAAQ+C,SAASP,EAAOxC,EAAQgD,OAAO1C,OAAS,EAAE,IAEpD,QACD,GAEJ,GAEL,IAEJ,GACF,E","sources":["webpack://genoverse/./src/js/Track/library/File/ lazy ^\\.\\/.*$ namespace object","webpack://genoverse/./src/js/plugins/fileDrop.js"],"sourcesContent":["var map = {\n\t\"./BAM\": 9482,\n\t\"./BAM.js\": 9482,\n\t\"./BED\": 4186,\n\t\"./BED.js\": 4186,\n\t\"./BIGBED\": 9480,\n\t\"./BIGBED.js\": 9480,\n\t\"./BIGWIG\": 7154,\n\t\"./BIGWIG.js\": 7154,\n\t\"./GFF\": 4273,\n\t\"./GFF.js\": 4273,\n\t\"./VCF\": 2946,\n\t\"./VCF.js\": 2946,\n\t\"./WIG\": 4601,\n\t\"./WIG.js\": 4601\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(() => {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 5405;\nmodule.exports = webpackAsyncContext;","import '../../css/fileDrop.css';\n\nconst plugin = function () {\n  const jQuery = this.jQuery;\n\n  this.on('afterInit', function () {\n    const browser = this;\n    const wrapper = this.wrapper;\n\n    jQuery(window).on('dragenter', (e) => {\n      const dataTransfer = e.originalEvent.dataTransfer;\n\n      if (dataTransfer?.types && (\n        dataTransfer.types[0] === 'Files' || dataTransfer.types[1] === 'Files' || dataTransfer.types[2] === 'Files'\n      ) && !jQuery('.gv-file-drop-total-overlay').length) {\n        const fileDropDiv      = jQuery('<div class=\"gv-file-drop\">').appendTo(wrapper);\n        const totalDropOverlay = jQuery('<div class=\"gv-file-drop-total-overlay\">').prependTo('body');\n\n        const dragleave = () => {\n          fileDropDiv.remove();\n          totalDropOverlay.remove();\n        };\n\n        totalDropOverlay.on('dragenter', (ev) => { ev.preventDefault(); ev.stopPropagation(); });\n        totalDropOverlay.on('dragover',  (ev) => { ev.preventDefault(); ev.stopPropagation(); });\n        totalDropOverlay.on('dragleave', dragleave);\n        totalDropOverlay.on('drop', (ev) => {\n          dragleave();\n          ev.preventDefault();\n          ev.stopPropagation();\n\n          // Sort in order to ensure that .bam files are before their .bam.bai files\n          const files          = Object.values(ev.originalEvent.dataTransfer.files).sort((a, b) => a.name.localeCompare(b.name));\n          const trackImporters = [];\n\n          for (let i = 0; i < files.length; i++) {\n            const file  = files[i];\n            const parts = file.name.split('.').reverse();\n            const gz    = parts[0] === 'gz';\n            const ext   = parts[gz ? 1 : 0];\n\n            let indexFile;\n\n            if (files[i + 1] && new RegExp(`^${file.name}\\\\.\\\\w+$`).test(files[i + 1].name)) {\n              indexFile = files[++i];\n            }\n\n            trackImporters.push({\n              file      : file,\n              indexFile : indexFile,\n              gz        : gz,\n              trackType : ext.toUpperCase(),\n            });\n          }\n\n          trackImporters.forEach(\n            (importer) => {\n              import(`../Track/library/File/${importer.trackType}`).then(\n                (imported) => {\n                  const track = imported.default.extend({\n                    name      : importer.file.name,\n                    info      : `Local file \"${importer.file.name}\", size: ${importer.file.size} bytes`,\n                    isLocal   : true,\n                    dataFile  : importer.file,\n                    indexFile : importer.indexFile,\n                    gz        : importer.gz,\n                  });\n\n                  browser.addTrack(track, browser.tracks.length - 1);\n                },\n                () => {}\n              );\n            }\n          );\n        });\n      }\n    });\n  });\n};\n\nexport default { fileDrop: plugin };\n"],"names":["map","webpackAsyncContext","req","Promise","resolve","then","__webpack_require__","o","e","Error","code","keys","Object","id","module","exports","fileDrop","jQuery","this","on","browser","wrapper","window","dataTransfer","originalEvent","types","length","fileDropDiv","appendTo","totalDropOverlay","prependTo","dragleave","remove","ev","preventDefault","stopPropagation","files","values","sort","a","b","name","localeCompare","trackImporters","i","file","parts","split","reverse","gz","ext","indexFile","RegExp","test","push","trackType","toUpperCase","forEach","importer","imported","track","default","extend","info","size","isLocal","dataFile","addTrack","tracks"],"sourceRoot":""}
