# Generated by Django 3.2.6 on 2021-10-07 17:50

import cegs_portal.search.models.validators
import django.contrib.postgres.fields.ranges
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('search', '0007_auto_20210930_1018'),
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ensembl_id', models.CharField(default='No ID', max_length=50, unique=True)),
                ('feature_type', models.CharField(max_length=50)),
                ('feature_subtype', models.CharField(max_length=50, null=True)),
                ('misc', models.JSONField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeatureAssembly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chrom_name', models.CharField(max_length=10)),
                ('ids', models.JSONField(null=True, validators=[cegs_portal.search.models.validators.validate_gene_ids])),
                ('location', django.contrib.postgres.fields.ranges.IntegerRangeField()),
                ('name', models.CharField(max_length=50)),
                ('strand', models.CharField(max_length=1, null=True)),
                ('ref_genome', models.CharField(max_length=20)),
                ('ref_genome_patch', models.CharField(max_length=10)),
            ],
        ),
        migrations.RemoveIndex(
            model_name='gencodeannotation',
            name='search_gcanno_location_index',
        ),
        migrations.AddIndex(
            model_name='gencodeannotation',
            index=models.Index(fields=['annotation_type'], name='search_gen_anno_type_index'),
        ),
        migrations.AddField(
            model_name='featureassembly',
            name='feature',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assemblies', to='search.feature'),
        ),
        migrations.AddField(
            model_name='feature',
            name='parent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='search.feature'),
        ),
        migrations.AddField(
            model_name='gencodeannotation',
            name='feature',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='annotation', to='search.feature'),
        ),
        migrations.AddIndex(
            model_name='featureassembly',
            index=models.Index(fields=['name'], name='sfa_name_index'),
        ),
        migrations.AddIndex(
            model_name='featureassembly',
            index=models.Index(fields=['chrom_name'], name='sfa_chrom_name_index'),
        ),
        migrations.AddIndex(
            model_name='featureassembly',
            index=django.contrib.postgres.indexes.GistIndex(fields=['location'], name='sfa_loc_index'),
        ),
        migrations.AddIndex(
            model_name='feature',
            index=models.Index(fields=['ensembl_id'], name='sf_ensembl_id_index'),
        ),
        migrations.AddIndex(
            model_name='feature',
            index=models.Index(fields=['feature_type'], name='sf_feature_type_index'),
        ),
    ]
