# Generated by Django 5.1.2 on 2024-11-05 15:51

from django.db import migrations, models

import cegs_portal.search.models.dna_feature_type
from cegs_portal.search.migrations.utils.facets import delete_facet_value


def add_functional_char_modality(apps, schema_editor):
    Facet = apps.get_model("search", "Facet")
    FacetValue = apps.get_model("search", "FacetValue")

    facet = Facet.objects.filter(name="Functional Characterization Modality").first()
    fv = FacetValue(value="Reporter Assay", facet=facet)
    fv.save()


def remove_functional_char_modality(apps, schema_editor):
    FacetValue = apps.get_model("search", "FacetValue")

    delete_facet_value(FacetValue, "Reporter Assay")


class Migration(migrations.Migration):

    dependencies = [
        ("search", "0066_auto_20241029_1651"),
    ]

    operations = [
        migrations.AlterField(
            model_name="analysis",
            name="genome_assembly",
            field=models.CharField(max_length=20),
        ),
        migrations.AlterField(
            model_name="analysis",
            name="p_value_threshold",
            field=models.FloatField(default=0.05),
        ),
        migrations.AlterField(
            model_name="dnafeature",
            name="feature_type",
            field=models.CharField(
                choices=[
                    ("DNAFeatureType.GENE", "Gene"),
                    ("DNAFeatureType.TRANSCRIPT", "Transcript"),
                    ("DNAFeatureType.EXON", "Exon"),
                    ("DNAFeatureType.CCRE", "cCRE"),
                    ("DNAFeatureType.DHS", "DHS"),
                    ("DNAFeatureType.GRNA", "gRNA"),
                    ("DNAFeatureType.CAR", "Chromatin Accessible Region"),
                    ("DNAFeatureType.CRE", "Called Regulatory Element"),
                ],
                default=cegs_portal.search.models.dna_feature_type.DNAFeatureType["GENE"],
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="experiment",
            name="source_type",
            field=models.CharField(
                choices=[
                    ("CCRE", "cCRE"),
                    ("DHS", "DHS"),
                    ("GRNA", "gRNA"),
                    ("CAR", "Chromatin Accessible Region"),
                    ("CRE", "Called Regulatory Element"),
                ],
                default="GRNA",
                max_length=50,
            ),
        ),
        migrations.RunPython(add_functional_char_modality, remove_functional_char_modality),
    ]
