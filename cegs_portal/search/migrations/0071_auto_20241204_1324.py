# Generated by Django 5.1.2 on 2024-12-04 18:24

from django.db import migrations

from cegs_portal.search.migrations.utils.facets import get_or_create_facet


def create_biosample(apps, schema_editor):
    Facet = apps.get_model("search", "Facet")

    biosample = get_or_create_facet(Facet, "Biosample", "Cell lines and tissue types", "FacetType.CATEGORICAL")

    try:
        cell_line = Facet.objects.get(name="Cell Line")
        for facet_value in cell_line.values.all():
            facet_value.facet = biosample
            facet_value.save()
    except Facet.DoesNotExist:
        pass

    try:
        tissue_types = Facet.objects.get(name="Tissue Type")
        for facet_value in tissue_types.values.all():
            facet_value.facet = biosample
            facet_value.save()
    except Facet.DoesNotExist:
        pass


def revert_biosample(apps, schema_editor):
    """This migration can't reliably be reverted, but we can'n revert some"""

    Facet = apps.get_model("search", "Facet")
    FacetValue = apps.get_model("search", "FacetValue")

    cell_line = get_or_create_facet(
        Facet, "Cell Line", "The cell line the experiment was performed on", "FacetType.CATEGORICAL"
    )
    tissue_type = get_or_create_facet(
        Facet, "Tissue Type", "The type of tissue the experiment was performed on", "FacetType.CATEGORICAL"
    )

    tissue_types = [
        "Stem",
        "Bone Marrow",
        "T Cell",
        "B Cell",
        "Blood Cell",
        "Breast",
        "Colon",
        "Prostate",
        "Lung",
        "Liver",
    ]

    for value in tissue_types:
        try:
            tt = FacetValue.objects.get(value=value)
            tt.facet = tissue_type
            tt.save()
        except:
            pass

    cell_lines = [
        "iPSC",
        "NPC",
        "CD8",
        "K562",
        "MCF-7",
        "HCT116",
        "DU 145",
        "A549",
        "NCI-H460",
        "PC-3",
        "MDA-MB-231",
        "HepG2",
        "SW620",
    ]

    for value in cell_lines:
        try:
            cl = FacetValue.objects.get(value=value)
            cl.facet = cell_line
            cl.save()
        except:
            pass

    biosample = Facet.objects.get(name="Biosample")
    biosample.delete()


class Migration(migrations.Migration):

    dependencies = [
        ("search", "0070_experimentsource"),
    ]

    operations = [migrations.RunPython(create_biosample, revert_biosample)]
