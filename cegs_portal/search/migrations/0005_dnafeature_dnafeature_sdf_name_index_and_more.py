# Generated by Django 4.0.3 on 2022-07-26 17:27

import cegs_portal.search.models.dna_feature
import cegs_portal.search.models.validators
import django.contrib.postgres.fields.ranges
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("search", "0004_remove_dnaregion_dnaregion_srchbl_idx_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="DNAFeature",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "accession_id",
                    models.CharField(
                        max_length=12,
                        null=True,
                        unique=True,
                        validators=[cegs_portal.search.models.validators.validate_accession_id],
                    ),
                ),
                ("facet_num_values", models.JSONField(null=True)),
                ("searchable", models.BooleanField(db_index=True, default=True)),
                ("cell_line", models.CharField(max_length=50, null=True)),
                ("chrom_name", models.CharField(max_length=10)),
                ("ensembl_id", models.CharField(max_length=50, null=True)),
                (
                    "ids",
                    models.JSONField(null=True, validators=[cegs_portal.search.models.validators.validate_gene_ids]),
                ),
                ("closest_gene_distance", models.IntegerField()),
                ("closest_gene_name", models.CharField(max_length=50)),
                ("location", django.contrib.postgres.fields.ranges.IntegerRangeField()),
                ("name", models.CharField(max_length=50)),
                ("strand", models.CharField(max_length=1, null=True)),
                ("ref_genome", models.CharField(max_length=20)),
                ("ref_genome_patch", models.CharField(max_length=10)),
                (
                    "feature_type",
                    models.CharField(
                        choices=[
                            (cegs_portal.search.models.dna_feature.DNAFeatureType["GENE"], "gene"),
                            (cegs_portal.search.models.dna_feature.DNAFeatureType["TRANSCRIPT"], "transcript"),
                            (cegs_portal.search.models.dna_feature.DNAFeatureType["EXON"], "exon"),
                            (cegs_portal.search.models.dna_feature.DNAFeatureType["CCRE"], "ccre"),
                            (cegs_portal.search.models.dna_feature.DNAFeatureType["DHS"], "dhs"),
                        ],
                        default=cegs_portal.search.models.dna_feature.DNAFeatureType["GENE"],
                        max_length=50,
                    ),
                ),
                ("feature_subtype", models.CharField(max_length=50, null=True)),
                ("misc", models.JSONField(null=True)),
                (
                    "closest_gene",
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to="search.dnafeature"),
                ),
                ("facet_values", models.ManyToManyField(to="search.facetvalue")),
                (
                    "parent",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="search.dnafeature",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to="search.file"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddIndex(
            model_name="dnafeature",
            index=models.Index(fields=["name"], name="sdf_name_index"),
        ),
        migrations.AddIndex(
            model_name="dnafeature",
            index=models.Index(fields=["chrom_name"], name="sdf_chrom_name_index"),
        ),
        migrations.AddIndex(
            model_name="dnafeature",
            index=models.Index(fields=["feature_type"], name="sdf_feature_type_index"),
        ),
        migrations.AddIndex(
            model_name="dnafeature",
            index=django.contrib.postgres.indexes.GistIndex(fields=["location"], name="sdf_loc_index"),
        ),
        migrations.AddIndex(
            model_name="dnafeature",
            index=models.Index(fields=["ensembl_id"], name="sdf_ensembl_id_index"),
        ),
    ]
