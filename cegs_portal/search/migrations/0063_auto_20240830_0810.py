# Generated by Django 5.1 on 2024-08-30 12:10

from django.db import migrations

def get_or_create_facet(Facet, facet_name, description, facet_type):
    facet = Facet.objects.filter(name=facet_name).first()
    if facet is None:
        facet = Facet(name=facet_name, description=description, facet_type=facet_type)
        facet.save()
    return facet

def delete_facet_value(FacetValue, facet_value):
    fv = FacetValue.objects.filter(value=facet_value).first()
    if fv is not None:
        fv.delete()


def get_or_create_facet_value(FacetValue, facet_value, facet):
    fv = FacetValue.objects.filter(value=facet_value).first()
    if fv is None:
        fv = FacetValue(value=facet_value, facet=facet)
        fv.save()

    return fv

def revert_new_facets(apps, schema_editor):
    FacetValue = apps.get_model("search", "FacetValue")

    # Experiment Source Type
    delete_facet_value(FacetValue, "Called Regulatory Element")

    # Cell Line
    delete_facet_value(FacetValue, "MCF-7")
    delete_facet_value(FacetValue, "HCT116")
    delete_facet_value(FacetValue, "DU 145")
    delete_facet_value(FacetValue, "A549")
    delete_facet_value(FacetValue, "NCI-H460")
    delete_facet_value(FacetValue, "PC-3")
    delete_facet_value(FacetValue, "MDA-MB-231")
    delete_facet_value(FacetValue, "HepG2")
    delete_facet_value(FacetValue, "SW620")

    # Tissue Type
    delete_facet_value(FacetValue, "Breast")
    delete_facet_value(FacetValue, "Colon")
    delete_facet_value(FacetValue, "Prostate")
    delete_facet_value(FacetValue, "Lung")
    delete_facet_value(FacetValue, "Liver")

def add_new_facets(apps, schema_editor):
    Facet = apps.get_model("search", "Facet")
    FacetValue = apps.get_model("search", "FacetValue")

    # +Experiment Source Type, if it hasn't already been added
    source_type = get_or_create_facet(Facet, "Experiment Source Type", "The genome feature the experiment perturbs", "FacetType.CATEGORICAL")
    get_or_create_facet_value(FacetValue, "Called Regulatory Element", source_type)

    cell_line = get_or_create_facet(Facet, "Cell Line", "The cell line the experiment was performed on", "FacetType.CATEGORICAL")
    get_or_create_facet_value(FacetValue, "MCF-7", cell_line)
    get_or_create_facet_value(FacetValue, "HCT116", cell_line)
    get_or_create_facet_value(FacetValue, "DU 145", cell_line)
    get_or_create_facet_value(FacetValue, "A549", cell_line)
    get_or_create_facet_value(FacetValue, "NCI-H460", cell_line)
    get_or_create_facet_value(FacetValue, "PC-3", cell_line)
    get_or_create_facet_value(FacetValue, "MDA-MB-231", cell_line)
    get_or_create_facet_value(FacetValue, "HepG2", cell_line)
    get_or_create_facet_value(FacetValue, "SW620", cell_line)

    tissue_type = get_or_create_facet(Facet, "Tissue Type", "The type of tissue the experiment was performed on", "FacetType.CATEGORICAL")
    get_or_create_facet_value(FacetValue, "Breast", tissue_type)
    get_or_create_facet_value(FacetValue, "Colon", tissue_type)
    get_or_create_facet_value(FacetValue, "Prostate", tissue_type)
    get_or_create_facet_value(FacetValue, "Lung", tissue_type)
    get_or_create_facet_value(FacetValue, "Liver", tissue_type)

def fix_categorical_value(apps, schema_editor):
    Facet = apps.get_model("search", "Facet")
    crispr = Facet.objects.filter(name="CRISPR Modulation").first()
    if crispr is not None:
        crispr.facet_type = "FacetType.CATEGORICAL"
        crispr.save()

    ga = Facet.objects.filter(name="Genome Assembly").first()
    if ga is not None:
        ga.facet_type = "FacetType.CATEGORICAL"
        ga.save()

def unfix_categorical_value(apps, schema_editor):
    """There is no reason to reverse the change"""


class Migration(migrations.Migration):

    dependencies = [
        ("search", "0062_ga_crispr_ceres_facet_changes"),
    ]

    operations = [migrations.RunPython(add_new_facets, revert_new_facets),migrations.RunPython(fix_categorical_value, unfix_categorical_value)]
