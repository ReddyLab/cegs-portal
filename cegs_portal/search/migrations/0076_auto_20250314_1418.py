# Generated by Django 5.1.4 on 2025-03-14 18:18

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("search", "0075_regulatoryeffectobservation_name"),
    ]

    operations = [
        migrations.RunSQL(
            """
CREATE OR REPLACE PROCEDURE delete_experiment(exp_accession_id varchar) AS $$
DECLARE
	exp_id bigint;
	a record;
	dna bigint;
BEGIN

exp_id := (SELECT id FROM search_experiment WHERE accession_id = exp_accession_id);

DELETE FROM search_dnafeature_associated_ccres
	WHERE from_dnafeature_id in (SELECT id FROM search_dnafeature WHERE experiment_accession_id = exp_accession_id);

DELETE FROM search_dnafeature_facet_values
	WHERE dnafeature_id in (SELECT id FROM search_dnafeature WHERE experiment_accession_id = exp_accession_id);

DELETE FROM search_dnafeature_associated_ccres
	WHERE from_dnafeature_id in (SELECT id FROM search_dnafeature WHERE experiment_accession_id = exp_accession_id)
		AND to_dnafeature_id in (SELECT id FROM search_dnafeature WHERE experiment_accession_id = exp_accession_id);

DELETE FROM search_dnafeature_associated_ccres
	WHERE from_dnafeature_id in (SELECT id FROM search_dnafeature WHERE experiment_accession_id = exp_accession_id);

FOR dna IN (SELECT id FROM search_dnafeature WHERE experiment_accession_id = exp_accession_id) LOOP
	IF EXISTS (SELECT id FROM search_dnafeature_associated_ccres WHERE to_dnafeature_id = dna) THEN
		-- This happens (probably?) when the feature is an associated CCRE that features from multiple
		-- experiments are associated with.
		-- In this case, we can't delete the feature but we can disassociate it from the experiment
		-- so the experiment can be deleted.
		UPDATE search_dnafeature SET experiment_accession_id = NULL, analysis_accession_id = NULL WHERE id = dna;
	ELSE
		DELETE FROM search_dnafeature WHERE id = dna;
	END IF;
END LOOP;

DELETE FROM search_regulatoryeffectobservation_sources
	WHERE regulatoryeffectobservation_id in (SELECT id FROM search_regulatoryeffectobservation WHERE experiment_accession_id = exp_accession_id);

DELETE FROM search_regulatoryeffectobservation_targets
	WHERE regulatoryeffectobservation_id in (SELECT id FROM search_regulatoryeffectobservation WHERE experiment_accession_id = exp_accession_id);

DELETE FROM search_regulatoryeffectobservation_facet_values
	WHERE regulatoryeffectobservation_id in (SELECT id FROM search_regulatoryeffectobservation WHERE experiment_accession_id = exp_accession_id);

DELETE FROM search_regulatoryeffectobservation
	WHERE experiment_accession_id = exp_accession_id;

IF (SELECT accession_id FROM search_analysis WHERE experiment_accession_id = exp_accession_id) <> NULL THEN
EXECUTE 'DELETE FROM search_accessionidlog WHERE message like ' || quote_literal('%%' || (SELECT accession_id FROM search_analysis
	WHERE experiment_accession_id = exp_accession_id) || '%%');
END IF;

DELETE FROM search_analysis
	WHERE experiment_accession_id = exp_accession_id;

DELETE FROM search_experiment_biosamples
	WHERE experiment_id in (SELECT id FROM search_experiment WHERE accession_id = exp_accession_id);

DELETE FROM search_experiment_facet_values
	WHERE experiment_id in (SELECT id FROM search_experiment WHERE accession_id = exp_accession_id);

IF EXISTS (SELECT id FROM search_dnafeature WHERE source_file_id IN (SELECT id FROM search_file WHERE experiment_accession_id = exp_accession_id)) THEN
	UPDATE search_file SET experiment_accession_id = NULL, analysis_id = NULL WHERE experiment_accession_id = exp_accession_id;
ELSE
 	DELETE FROM search_file WHERE experiment_accession_id = exp_accession_id;
END IF;

DELETE FROM search_experimentsource
	WHERE experiment_id = exp_id;

DELETE FROM search_experiment
	WHERE accession_id = exp_accession_id;

DELETE FROM search_accessionidlog WHERE accession_id = exp_accession_id;

EXECUTE 'DELETE FROM search_accessionidlog WHERE message like ' || quote_literal('%%' || exp_accession_id ||'%%');
END;
$$ LANGUAGE plpgsql;
"""
        )
    ]
