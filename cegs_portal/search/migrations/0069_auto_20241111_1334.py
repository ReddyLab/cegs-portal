# Generated by Django 5.1.2 on 2024-11-11 18:34

from django.db import migrations

from cegs_portal.search.models import EffectObservationDirectionType, FunctionalCharacterizationType


class Migration(migrations.Migration):

    dependencies = [
        ("search", "0068_dnafeature_significant_reo"),
    ]

    operations = [
        # This first migration should have been performed in a migration between 0067 and 0068.
        # It was accidentally left out and is necessary for the second migration, so we're
        # including it here.
        #
        # Add functional characterization facet values to existing REOs
        migrations.RunSQL(
            f"""
            WITH expr_facet as (SELECT se.id, se.accession_id, sfv.value, sfv.id as fvid
               	FROM public.search_experiment as se
               	JOIN search_experiment_facet_values as sefv ON se.id = sefv.experiment_id
               	JOIN search_facetvalue as sfv ON sefv.facetvalue_id = sfv.id
               	WHERE sfv.value in ('{FunctionalCharacterizationType.REPORTER_ASSAY}', '{FunctionalCharacterizationType.CRISPRI}', '{FunctionalCharacterizationType.CRISPRA}')
               	ORDER BY se.id)
            INSERT INTO search_regulatoryeffectobservation_facet_values (regulatoryeffectobservation_id, facetvalue_id) (
               	SELECT sreo.id, ef.fvid
               	FROM search_regulatoryeffectobservation as sreo
               	JOIN expr_facet as ef on sreo.experiment_id = ef.id)
            ON CONFLICT DO NOTHING
            """,
            f"""
            DELETE FROM search_regulatoryeffectobservation_facet_values as sreofv
            WHERE sreofv.facetvalue_id IN
               	(SELECT id FROM search_facetvalue
               	WHERE search_facetvalue.value in ('{FunctionalCharacterizationType.REPORTER_ASSAY}', '{FunctionalCharacterizationType.CRISPRI}', '{FunctionalCharacterizationType.CRISPRA}'));
            """,
        ),
        # Add functional characterization and direction facet values to existing dna features
        migrations.RunSQL(
            f"""
            WITH reo_facets as (SELECT sreo.id, sfv.value, sfv.id as fvid
               	FROM search_regulatoryeffectobservation as sreo
               	JOIN search_regulatoryeffectobservation_facet_values as sreofv ON sreo.id = sreofv.regulatoryeffectobservation_id
               	JOIN search_facetvalue as sfv ON sreofv.facetvalue_id = sfv.id
               	WHERE sfv.value in ('{FunctionalCharacterizationType.REPORTER_ASSAY}', '{FunctionalCharacterizationType.CRISPRI}', '{FunctionalCharacterizationType.CRISPRA}',
                    '{EffectObservationDirectionType.BOTH}', '{EffectObservationDirectionType.ENRICHED}', '{EffectObservationDirectionType.DEPLETED}',
                    '{EffectObservationDirectionType.NON_SIGNIFICANT}')
               	ORDER BY sreo.id)
            INSERT INTO search_dnafeature_facet_values (dnafeature_id, facetvalue_id) (
               	SELECT sdf.id, reof.fvid
               	FROM search_dnafeature as sdf
               	JOIN search_regulatoryeffectobservation_sources as sreos on sdf.id = sreos.dnafeature_id
               	JOIN reo_facets as reof on reof.id = sreos.regulatoryeffectobservation_id)
            ON CONFLICT DO NOTHING
            """,
            f"""
            DELETE FROM search_dnafeature_facet_values as sdffv
            WHERE sdffv.facetvalue_id IN
               	(SELECT id FROM search_facetvalue
               	WHERE search_facetvalue.value in ('{FunctionalCharacterizationType.REPORTER_ASSAY}', '{FunctionalCharacterizationType.CRISPRI}', '{FunctionalCharacterizationType.CRISPRA}',
                    '{EffectObservationDirectionType.BOTH}', '{EffectObservationDirectionType.ENRICHED}', '{EffectObservationDirectionType.DEPLETED}',
                    '{EffectObservationDirectionType.NON_SIGNIFICANT}'))
            """,
        ),
    ]
