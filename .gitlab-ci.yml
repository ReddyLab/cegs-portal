stages:
  - lint
  - test
  - build
  - scan
  - tag

variables:
  THE_DOCKERFILE: ./compose/production/django/Dockerfile

include:
  - project: 'utility/project-templates/ci-templates'
    file: '/docker2.yml'

flake8:
  stage: lint
  tags:
    - docker-executor
  image: python:3.9-alpine
  before_script:
    - pip install -q flake8
  script:
    - flake8

pytest:
  stage: test
  image: docker/compose:latest
  tags:
    - shell-executor
  # services:
  #   - docker:dind
  before_script:
    - docker-compose -f local.yml build
    # Ensure celerybeat does not crash due to non-existent tables
    - docker-compose -f local.yml up -d
    - docker-compose -f local.yml run --rm django python manage.py migrate
    - docker-compose -f local.yml run django python manage.py collectstatic
  script:
    - docker-compose -f local.yml run django pytest

build:
 extends: .kaniko_build

scan:
  extends: .docker_scan

tag:
  extends: .registry_image_tag
