stages:
  - lint
  - build
  - test
  - scan
  - updatechart


include:
  - project: 'utility/project-templates/ci-templates'
    file: '/docker2.yml'

flake8:
  stage: lint
  tags:
    - kube-executor
  image: python:3.9.10-bullseye
  before_script:
    - pip install -q flake8 --no-warn-script-location
  script:
    - PATH=$PATH:/tmp/.local/bin flake8

build-test:
  extends: .kaniko_build
  variables:
    THE_DOCKERFILE: $TEST_DOCKERFILE
  except:
    - production

build-prod:
  extends: .kaniko_build
  variables:
    THE_DOCKERFILE: $PROD_DOCKERFILE
    THE_IMAGE: $CI_REGISTRY_IMAGE:prod
  only:
    - production

pytest:
  stage: test
  tags:
    - kube-executor
  image: ${CI_REGISTRY_IMAGE}:dev
  variables:
    GIT_STRATEGY: none
    POSTGRES_HOST: postgres
    POSTGRES_PORT: "5432"
    POSTGRES_DB: cegs_portal
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: test_password
    DATABASE_USER: ${POSTGRES_USER}
    DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
    DATABASE_HOST: ${POSTGRES_HOST}
    DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"
    USE_DOCKER: "no"
    DJANGO_SETTINGS_MODULE: "config.settings.test"
  services:
    - name: "image-mirror-prod-registry.cloud.duke.edu/bitnami/postgresql:13-debian-10"
      alias: postgres
  before_script:
    - cd /app
    - python manage.py migrate
    - python manage.py collectstatic
  script:
    - pytest
  except:
    - production
  retry:
    max: 2
    when: runner_system_failure

scan-test:
  extends: .docker_scan
  except:
    - production

scan-prod:
  extends: .docker_scan
  variables:
    THE_IMAGE: $CI_REGISTRY_IMAGE:prod
  only:
    - production

.updatechart:
  retry: 1
  image: $CI_REGISTRY/utility/images/basic-shell-executor:latest
  stage: updatechart
  script:
    - TAG=${TAG:-dev}
    - REGISTRY_ENDPOINT="https://gitlab.dhe.duke.edu"
    - CONTENT_TYPE="application/json"
    - SHA=$(curl -sf -H "Private-Token:$SELF_API_TOKEN" -H "accept:$CONTENT_TYPE" "$REGISTRY_ENDPOINT/api/v4/projects/4707/registry/repositories/1732/tags/$TAG" | jq ".digest")
    - curl -sf -X PUT -H "Private-Token:$CHART_API_TOKEN" "$REGISTRY_ENDPOINT/api/v4/projects/4782/variables/$IMAGE_SHA" -F "value=$SHA"
    - curl -sf -X POST -H "Private-Token:$CHART_API_TOKEN" -F token=$DEPLOY_TRIGGER_TOKEN -F ref=$TRIGGER_BRANCH $REGISTRY_ENDPOINT/api/v4/projects/4782/trigger/pipeline
  tags:
    - kube-executor

updatechart-test:
  extends: .updatechart
  variables:
    IMAGE_SHA: DEV_IMAGE_SHA
    TRIGGER_BRANCH: master
  except:
    - production

updatechart-prod:
  extends: .updatechart
  variables:
    IMAGE_SHA: PROD_IMAGE_SHA
    TAG: prod
    TRIGGER_BRANCH: production
  only:
    - production

